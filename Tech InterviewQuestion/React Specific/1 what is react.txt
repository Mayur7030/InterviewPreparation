what is React?

React is a free and open-source front-end JavaScript library for building user interfaces based on components. 

 why react?
 provies ease of creation of spa with help of reusable components

feature -

 1)virtual DOM
 2)compoenent based architecure
 3)reusablity of components
 4)JSX
 5)Declarative syntax-
 developers focus on "what the ui should look like" rather than "how"
 6)community 
 7)hooks
 8)unidiarectional data flow
 9)
 --------------------------

advantage -
1)spa
2)cross platform & open source
3)lightweight and very fast(vdom)
4)large community
5)testing is easy

Disadvantage-
1)react is not good for small application
2)JSX complexity
3)full feature framework
4) flexibilty to learn
5)
-------------------------
decalrative-
function App(){
    return <h1>Interview</>
}
implarative-
function App(){
    const ele = document.createElement("h1")
    ele.textContent = "Intervie happy"
    document.body.appendChild(ele)
}
-------------------
flow of react app
browser request to index.html
1)index.HTML
single page which loads index.js by react 
2)index.js
Replace root element of index.html file by app compoenent
3)App.js
root compoenent which is the container of all the child compoenent
4) childcompo
custom child compoenent palced over app compoenent
---------------------------
React vs Angular -
Both uses component
React - library
ang - framework
React - vdom
ang- Real dom
react-lightweight
ang - bigger
react - ext libraries
ang - build in support for feature like routing
----------------------
Reusability -
Composition -creation of new and big component from existing small compoenets .


 1 Easy creation of dynamic applications:--


2 Improved performance: 
React uses Virtual DOM, thereby creating web applications faster. Virtual DOM compares the components’ previous states and updates only the items in the Real DOM that were changed, instead of updating all of the components again, as conventional web applications do. 

3 Reusable components:==>
 Components are the building blocks of any React application, and a single app usually consists of multiple components. These components have their logic and controls, and they can be reused throughout the application, which in turn dramatically reduces the application’s development time.

4 Unidirectional data flow:==>
 React follows a unidirectional data flow. This means that when designing a React app, developers often nest child components within parent components. Since the data flows in a single direction, it becomes easier to debug errors and know where a problem occurs in an application at the moment in question.

5 Small learning curve:-->
 React is easy to learn, as it mostly combines basic HTML and JavaScript concepts with some beneficial additions. Still, as is the case with other tools and frameworks, you have to spend some time to get a proper understanding of React’s library.

6 It can be used for the development of both web and mobile apps:-->
 We already know that React is used for the development of web applications, but that’s not all it can do. There is a framework called React Native, derived from React itself, that is hugely popular and is used for creating beautiful mobile applications. So, in reality, React can be used for making both web and mobile applications.

7 Dedicated tools for easy debugging:==>
 Facebook has released a Chrome extension that can be used to debug React applications. This makes the process of debugging React web applications faster and easier.


usecase -
1 like any other module react does not enforces strict rules around code convetions or file organization.this helps teams to arrange as per their requirement.
2 react provides JSX(extended js) syntax where we can use html alongside js.
3