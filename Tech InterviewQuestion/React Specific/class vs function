Class Component -


how to maintain state in class -
2 step process -
1) this.setState() methods is used to update the state
2) this.state property is used to render the update state in DOM. 

When to use a Class Component over a Function Component?

After the addition of Hooks(i.e. React 16.8 onwards) it is always recommended to use Function components over Class components in React. Because you could use state, lifecycle methods and other features that were only available in class component present in function component too.

But even there are two reasons to use Class components over Function components.

If you need a React functionality whose Function component equivalent is not present yet, like Error Boundaries.
In older versions, If the component needs state or lifecycle methods then you need to use class component.



Error boundaries are components that catch JavaScript errors anywhere in their child component tree, log those errors, and display a fallback UI instead of the component tree that crashed.

A class component becomes an error boundary if it defines a new lifecycle method called componentDidCatch(error, info) or static getDerivedStateFromError() :


benefits of functional compoenent over class component--

Simplicity and Readability:
No this keyword
Easier code splitting
improve developer experience
better performance
easier to test
hooks