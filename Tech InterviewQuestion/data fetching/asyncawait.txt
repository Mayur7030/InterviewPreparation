async always provide promise
Async/await is a syntactic feature in JavaScript that allows you to write asynchronous code in a synchronous manner. It provides a way to work with asynchronous operations in a more readable and intuitive way compared to traditional callback-based or promise-based approaches.


Asynchronous code is code that runs without blocking the main thread of execution. 
It allows the UI to remain responsive while the application is performing tasks such as fetching data from a server.

https://www.geeksforgeeks.org/async-await-function-in-javascript/

fetch api -
const asynfunc = async () => {
  let p = new Promise((res) => {
    fetch("https://jsonplaceholder.typicode.com/todos/1")
      .then((data) => data.json())
      .then((value) => res(value));
  }).then((res) => console.log(res));
  let q = await p;
  console.log("q");
};

asynfunc();
---------------------------------------------------------


code ----------->
let temp = async () => {
    let promise1 = new Promise((res, rej) => {
      setTimeout(() => {
      //   console.log(res(99));
      res(console.log(99595))
      }, 2000);
    });
    let promise2 = new Promise((res, rej) => {
      setTimeout(() => {
      //   console.log(rej(99));
      rej(console.log(585858))
      }, 4000);
    });
  
    let temp1 = await promise1;
    console.log("this wille executes after promise1)
    let temp2 = await promise2;
  };
  
  temp();